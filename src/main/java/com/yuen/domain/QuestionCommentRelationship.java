package com.yuen.domain;
// Generated Jan 30, 2018 8:45:22 PM by Hibernate Tools 5.0.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * QuestionCommentRelationship generated by hbm2java
 */
@Entity
@Table(name = "question_comment_relationship", catalog = "mycontact")
public class QuestionCommentRelationship implements java.io.Serializable {

	private Integer questionCommentRelationshipId;
	private QuestionComment questionCommentByParentQuestionCommentId;
	private QuestionComment questionCommentByChildQuestionCommentId;
	private String questionCommentRelationshipDesc;

	public QuestionCommentRelationship() {
	}

	public QuestionCommentRelationship(QuestionComment questionCommentByParentQuestionCommentId,
			QuestionComment questionCommentByChildQuestionCommentId, String questionCommentRelationshipDesc) {
		this.questionCommentByParentQuestionCommentId = questionCommentByParentQuestionCommentId;
		this.questionCommentByChildQuestionCommentId = questionCommentByChildQuestionCommentId;
		this.questionCommentRelationshipDesc = questionCommentRelationshipDesc;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "question_comment_relationship_id", unique = true, nullable = false)
	public Integer getQuestionCommentRelationshipId() {
		return this.questionCommentRelationshipId;
	}

	public void setQuestionCommentRelationshipId(Integer questionCommentRelationshipId) {
		this.questionCommentRelationshipId = questionCommentRelationshipId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_question_comment_id")
	public QuestionComment getQuestionCommentByParentQuestionCommentId() {
		return this.questionCommentByParentQuestionCommentId;
	}

	public void setQuestionCommentByParentQuestionCommentId(QuestionComment questionCommentByParentQuestionCommentId) {
		this.questionCommentByParentQuestionCommentId = questionCommentByParentQuestionCommentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "child_question_comment_id")
	public QuestionComment getQuestionCommentByChildQuestionCommentId() {
		return this.questionCommentByChildQuestionCommentId;
	}

	public void setQuestionCommentByChildQuestionCommentId(QuestionComment questionCommentByChildQuestionCommentId) {
		this.questionCommentByChildQuestionCommentId = questionCommentByChildQuestionCommentId;
	}

	@Column(name = "question_comment_relationship_desc", length = 65535)
	public String getQuestionCommentRelationshipDesc() {
		return this.questionCommentRelationshipDesc;
	}

	public void setQuestionCommentRelationshipDesc(String questionCommentRelationshipDesc) {
		this.questionCommentRelationshipDesc = questionCommentRelationshipDesc;
	}

}
