package com.yuen.domain;
// Generated Jan 30, 2018 8:45:22 PM by Hibernate Tools 5.0.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TestTakerCommentRelationship generated by hbm2java
 */
@Entity
@Table(name = "test_taker_comment_relationship", catalog = "mycontact")
public class TestTakerCommentRelationship implements java.io.Serializable {

	private Integer testTakerCommentRelationshipId;
	private TestTakerComment testTakerCommentByParentTestTakerCommentId;
	private TestTakerComment testTakerCommentByChildTestTakerCommentId;
	private String testTakerCommentRelationshipDesc;

	public TestTakerCommentRelationship() {
	}

	public TestTakerCommentRelationship(TestTakerComment testTakerCommentByParentTestTakerCommentId,
			TestTakerComment testTakerCommentByChildTestTakerCommentId, String testTakerCommentRelationshipDesc) {
		this.testTakerCommentByParentTestTakerCommentId = testTakerCommentByParentTestTakerCommentId;
		this.testTakerCommentByChildTestTakerCommentId = testTakerCommentByChildTestTakerCommentId;
		this.testTakerCommentRelationshipDesc = testTakerCommentRelationshipDesc;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "test_taker_comment_relationship_id", unique = true, nullable = false)
	public Integer getTestTakerCommentRelationshipId() {
		return this.testTakerCommentRelationshipId;
	}

	public void setTestTakerCommentRelationshipId(Integer testTakerCommentRelationshipId) {
		this.testTakerCommentRelationshipId = testTakerCommentRelationshipId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_test_taker_comment_id")
	public TestTakerComment getTestTakerCommentByParentTestTakerCommentId() {
		return this.testTakerCommentByParentTestTakerCommentId;
	}

	public void setTestTakerCommentByParentTestTakerCommentId(
			TestTakerComment testTakerCommentByParentTestTakerCommentId) {
		this.testTakerCommentByParentTestTakerCommentId = testTakerCommentByParentTestTakerCommentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "child_test_taker_comment_id")
	public TestTakerComment getTestTakerCommentByChildTestTakerCommentId() {
		return this.testTakerCommentByChildTestTakerCommentId;
	}

	public void setTestTakerCommentByChildTestTakerCommentId(
			TestTakerComment testTakerCommentByChildTestTakerCommentId) {
		this.testTakerCommentByChildTestTakerCommentId = testTakerCommentByChildTestTakerCommentId;
	}

	@Column(name = "test_taker_comment_relationship_desc", length = 65535)
	public String getTestTakerCommentRelationshipDesc() {
		return this.testTakerCommentRelationshipDesc;
	}

	public void setTestTakerCommentRelationshipDesc(String testTakerCommentRelationshipDesc) {
		this.testTakerCommentRelationshipDesc = testTakerCommentRelationshipDesc;
	}

}
