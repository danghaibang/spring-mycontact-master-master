package com.yuen.domain;
// Generated Jan 30, 2018 8:45:22 PM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ContentComment generated by hbm2java
 */
@Entity
@Table(name = "content_comment", catalog = "mycontact")
public class ContentComment implements java.io.Serializable {

	private Integer contentCommentId;
	private CourseComment courseComment;
	private CourseContent courseContent;
	private CourseReviewerDecision courseReviewerDecision;
	private Date contentCommentDate;
	private Date contentCommentTime;
	private String contentCommentDesc;
	private Set<ContentCommentRelationship> contentCommentRelationshipsForParentContentCommentId = new HashSet<ContentCommentRelationship>(
			0);
	private Set<ContentCommentRelationship> contentCommentRelationshipsForChildContentCommentId = new HashSet<ContentCommentRelationship>(
			0);

	public ContentComment() {
	}

	public ContentComment(Date contentCommentDate, Date contentCommentTime, String contentCommentDesc) {
		this.contentCommentDate = contentCommentDate;
		this.contentCommentTime = contentCommentTime;
		this.contentCommentDesc = contentCommentDesc;
	}

	public ContentComment(CourseComment courseComment, CourseContent courseContent,
			CourseReviewerDecision courseReviewerDecision, Date contentCommentDate, Date contentCommentTime,
			String contentCommentDesc,
			Set<ContentCommentRelationship> contentCommentRelationshipsForParentContentCommentId,
			Set<ContentCommentRelationship> contentCommentRelationshipsForChildContentCommentId) {
		this.courseComment = courseComment;
		this.courseContent = courseContent;
		this.courseReviewerDecision = courseReviewerDecision;
		this.contentCommentDate = contentCommentDate;
		this.contentCommentTime = contentCommentTime;
		this.contentCommentDesc = contentCommentDesc;
		this.contentCommentRelationshipsForParentContentCommentId = contentCommentRelationshipsForParentContentCommentId;
		this.contentCommentRelationshipsForChildContentCommentId = contentCommentRelationshipsForChildContentCommentId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "content_comment_id", unique = true, nullable = false)
	public Integer getContentCommentId() {
		return this.contentCommentId;
	}

	public void setContentCommentId(Integer contentCommentId) {
		this.contentCommentId = contentCommentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_comment_id")
	public CourseComment getCourseComment() {
		return this.courseComment;
	}

	public void setCourseComment(CourseComment courseComment) {
		this.courseComment = courseComment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_content_id")
	public CourseContent getCourseContent() {
		return this.courseContent;
	}

	public void setCourseContent(CourseContent courseContent) {
		this.courseContent = courseContent;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_reviewer_decision_id")
	public CourseReviewerDecision getCourseReviewerDecision() {
		return this.courseReviewerDecision;
	}

	public void setCourseReviewerDecision(CourseReviewerDecision courseReviewerDecision) {
		this.courseReviewerDecision = courseReviewerDecision;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "content_comment_date", nullable = false, length = 10)
	public Date getContentCommentDate() {
		return this.contentCommentDate;
	}

	public void setContentCommentDate(Date contentCommentDate) {
		this.contentCommentDate = contentCommentDate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "content_comment_time", nullable = false, length = 8)
	public Date getContentCommentTime() {
		return this.contentCommentTime;
	}

	public void setContentCommentTime(Date contentCommentTime) {
		this.contentCommentTime = contentCommentTime;
	}

	@Column(name = "content_comment_desc", nullable = false, length = 65535)
	public String getContentCommentDesc() {
		return this.contentCommentDesc;
	}

	public void setContentCommentDesc(String contentCommentDesc) {
		this.contentCommentDesc = contentCommentDesc;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contentCommentByParentContentCommentId")
	public Set<ContentCommentRelationship> getContentCommentRelationshipsForParentContentCommentId() {
		return this.contentCommentRelationshipsForParentContentCommentId;
	}

	public void setContentCommentRelationshipsForParentContentCommentId(
			Set<ContentCommentRelationship> contentCommentRelationshipsForParentContentCommentId) {
		this.contentCommentRelationshipsForParentContentCommentId = contentCommentRelationshipsForParentContentCommentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contentCommentByChildContentCommentId")
	public Set<ContentCommentRelationship> getContentCommentRelationshipsForChildContentCommentId() {
		return this.contentCommentRelationshipsForChildContentCommentId;
	}

	public void setContentCommentRelationshipsForChildContentCommentId(
			Set<ContentCommentRelationship> contentCommentRelationshipsForChildContentCommentId) {
		this.contentCommentRelationshipsForChildContentCommentId = contentCommentRelationshipsForChildContentCommentId;
	}

}
