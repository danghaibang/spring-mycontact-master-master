package com.yuen.domain;
// Generated Jan 30, 2018 8:45:22 PM by Hibernate Tools 5.0.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Topic generated by hbm2java
 */
@Entity
@Table(name = "topic", catalog = "mycontact")
public class Topic implements java.io.Serializable {

	private Integer topicId;
	private Topic topic;
	private User user;
	private String topicCode;
	private String topicName;
	private String topicDesc;
	private Set<QuestionTopicMap> questionTopicMaps = new HashSet<QuestionTopicMap>(0);
	private Set<Topic> topics = new HashSet<Topic>(0);
	private Set<CourseTopicMap> courseTopicMaps = new HashSet<CourseTopicMap>(0);
	private Set<TopicAccessMode> topicAccessModes = new HashSet<TopicAccessMode>(0);
	private Set<QgroupTopicMap> qgroupTopicMaps = new HashSet<QgroupTopicMap>(0);

	public Topic() {
	}

	public Topic(User user, String topicCode, String topicName) {
		this.user = user;
		this.topicCode = topicCode;
		this.topicName = topicName;
	}

	public Topic(Topic topic, User user, String topicCode, String topicName, String topicDesc,
			Set<QuestionTopicMap> questionTopicMaps, Set<Topic> topics, Set<CourseTopicMap> courseTopicMaps,
			Set<TopicAccessMode> topicAccessModes, Set<QgroupTopicMap> qgroupTopicMaps) {
		this.topic = topic;
		this.user = user;
		this.topicCode = topicCode;
		this.topicName = topicName;
		this.topicDesc = topicDesc;
		this.questionTopicMaps = questionTopicMaps;
		this.topics = topics;
		this.courseTopicMaps = courseTopicMaps;
		this.topicAccessModes = topicAccessModes;
		this.qgroupTopicMaps = qgroupTopicMaps;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "topic_id", unique = true, nullable = false)
	public Integer getTopicId() {
		return this.topicId;
	}

	public void setTopicId(Integer topicId) {
		this.topicId = topicId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_topic_id")
	public Topic getTopic() {
		return this.topic;
	}

	public void setTopic(Topic topic) {
		this.topic = topic;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "topic_code", nullable = false, length = 20)
	public String getTopicCode() {
		return this.topicCode;
	}

	public void setTopicCode(String topicCode) {
		this.topicCode = topicCode;
	}

	@Column(name = "topic_name", nullable = false, length = 200)
	public String getTopicName() {
		return this.topicName;
	}

	public void setTopicName(String topicName) {
		this.topicName = topicName;
	}

	@Column(name = "topic_desc", length = 65535)
	public String getTopicDesc() {
		return this.topicDesc;
	}

	public void setTopicDesc(String topicDesc) {
		this.topicDesc = topicDesc;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topic")
	public Set<QuestionTopicMap> getQuestionTopicMaps() {
		return this.questionTopicMaps;
	}

	public void setQuestionTopicMaps(Set<QuestionTopicMap> questionTopicMaps) {
		this.questionTopicMaps = questionTopicMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topic")
	public Set<Topic> getTopics() {
		return this.topics;
	}

	public void setTopics(Set<Topic> topics) {
		this.topics = topics;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topic")
	public Set<CourseTopicMap> getCourseTopicMaps() {
		return this.courseTopicMaps;
	}

	public void setCourseTopicMaps(Set<CourseTopicMap> courseTopicMaps) {
		this.courseTopicMaps = courseTopicMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topic")
	public Set<TopicAccessMode> getTopicAccessModes() {
		return this.topicAccessModes;
	}

	public void setTopicAccessModes(Set<TopicAccessMode> topicAccessModes) {
		this.topicAccessModes = topicAccessModes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topic")
	public Set<QgroupTopicMap> getQgroupTopicMaps() {
		return this.qgroupTopicMaps;
	}

	public void setQgroupTopicMaps(Set<QgroupTopicMap> qgroupTopicMaps) {
		this.qgroupTopicMaps = qgroupTopicMaps;
	}

}
