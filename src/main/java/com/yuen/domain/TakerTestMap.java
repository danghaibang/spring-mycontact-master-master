package com.yuen.domain;
// Generated Jan 30, 2018 8:45:22 PM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TakerTestMap generated by hbm2java
 */
@Entity
@Table(name = "taker_test_map", catalog = "mycontact")
public class TakerTestMap implements java.io.Serializable {

	private Integer takerTestMapId;
	private Test test;
	private User user;
	private Date takerTestMapStartdate;
	private Date takerTestMapStarttime;
	private Date takerTestMapEnddate;
	private Date takerTestMapEndtime;
	private String takerTestMapDesc;
	private Set<TestTakerComment> testTakerComments = new HashSet<TestTakerComment>(0);
	private Set<TakerSolution> takerSolutions = new HashSet<TakerSolution>(0);

	public TakerTestMap() {
	}

	public TakerTestMap(Date takerTestMapStartdate, Date takerTestMapStarttime) {
		this.takerTestMapStartdate = takerTestMapStartdate;
		this.takerTestMapStarttime = takerTestMapStarttime;
	}

	public TakerTestMap(Test test, User user, Date takerTestMapStartdate, Date takerTestMapStarttime,
			Date takerTestMapEnddate, Date takerTestMapEndtime, String takerTestMapDesc,
			Set<TestTakerComment> testTakerComments, Set<TakerSolution> takerSolutions) {
		this.test = test;
		this.user = user;
		this.takerTestMapStartdate = takerTestMapStartdate;
		this.takerTestMapStarttime = takerTestMapStarttime;
		this.takerTestMapEnddate = takerTestMapEnddate;
		this.takerTestMapEndtime = takerTestMapEndtime;
		this.takerTestMapDesc = takerTestMapDesc;
		this.testTakerComments = testTakerComments;
		this.takerSolutions = takerSolutions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "taker_test_map_id", unique = true, nullable = false)
	public Integer getTakerTestMapId() {
		return this.takerTestMapId;
	}

	public void setTakerTestMapId(Integer takerTestMapId) {
		this.takerTestMapId = takerTestMapId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "test_id")
	public Test getTest() {
		return this.test;
	}

	public void setTest(Test test) {
		this.test = test;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "taker_test_map_startdate", nullable = false, length = 10)
	public Date getTakerTestMapStartdate() {
		return this.takerTestMapStartdate;
	}

	public void setTakerTestMapStartdate(Date takerTestMapStartdate) {
		this.takerTestMapStartdate = takerTestMapStartdate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "taker_test_map_starttime", nullable = false, length = 8)
	public Date getTakerTestMapStarttime() {
		return this.takerTestMapStarttime;
	}

	public void setTakerTestMapStarttime(Date takerTestMapStarttime) {
		this.takerTestMapStarttime = takerTestMapStarttime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "taker_test_map_enddate", length = 10)
	public Date getTakerTestMapEnddate() {
		return this.takerTestMapEnddate;
	}

	public void setTakerTestMapEnddate(Date takerTestMapEnddate) {
		this.takerTestMapEnddate = takerTestMapEnddate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "taker_test_map_endtime", length = 8)
	public Date getTakerTestMapEndtime() {
		return this.takerTestMapEndtime;
	}

	public void setTakerTestMapEndtime(Date takerTestMapEndtime) {
		this.takerTestMapEndtime = takerTestMapEndtime;
	}

	@Column(name = "taker_test_map_desc", length = 65535)
	public String getTakerTestMapDesc() {
		return this.takerTestMapDesc;
	}

	public void setTakerTestMapDesc(String takerTestMapDesc) {
		this.takerTestMapDesc = takerTestMapDesc;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "takerTestMap")
	public Set<TestTakerComment> getTestTakerComments() {
		return this.testTakerComments;
	}

	public void setTestTakerComments(Set<TestTakerComment> testTakerComments) {
		this.testTakerComments = testTakerComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "takerTestMap")
	public Set<TakerSolution> getTakerSolutions() {
		return this.takerSolutions;
	}

	public void setTakerSolutions(Set<TakerSolution> takerSolutions) {
		this.takerSolutions = takerSolutions;
	}

}
